name: Lint Check

on:
  pull_request:
    branches: [ main, master, develop ]
  push:
    branches: [ main, master, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint black isort
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics \
          --exclude=.git,__pycache__,.venv*,*.egg-info,build,dist

    - name: Run pylint
      continue-on-error: true
      run: |
        find . -type f -name "*.py" ! -path "./.venv*/*" ! -path "./build/*" ! -path "./dist/*" \
          ! -path "./*.egg-info/*" -exec pylint --exit-zero {} +

    - name: Check code formatting with black
      run: |
        black --check --diff --exclude='/(\.venv.*|\.git|__pycache__|.*\.egg-info|build|dist)/' .

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff --skip .venv --skip .venv314 --skip-glob "*.egg-info" .

    - name: Lint Summary
      if: always()
      run: |
        echo "âœ… Linting checks completed!"
        echo "Review the output above for any issues that need attention."

